Git is a version control system.
Git is a free software.

重启Git Bash之后输入cd learngit进入repository

cd C:/Users/hust退回上级目录

如果git status告诉你有文件被修改过，用git diff可以查看修改内容。


HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。


#工作区与暂存区

learngit文件夹就是一个工作区：
工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。隐藏目录用ls -ah命令就可以看见。

隐藏目录.git是Git的版本库，里面包含stage 和 master
工作区   ---add到---   stage    ---commit到---   master、

git diff是比较 相对于stage，工作区增减了那些内容，工作区新建的文件没有add过，不会比较。而add过在工作区被删了会比较

git status中某文本文件modified指工作区文件相对master有变动，显示new file是文本新建第一次add进stage。deleted是add过但在工作区被删除的文件

add，之后修改文本，如果commit之后git status会提示modified，则正确。的确正确，modified就是工作区相对于master的变动。



#管理修改

git diff HEAD -- file命令可以查看工作区和版本库里面最新版本的区别

vi file可以直接在MINGW里面修改文本，修改的是工作区的文件。

按esc进入命令模式

按 :wq 或者大写的 ZZ 是退出并保存。(注意要加:)

按:q! 是退出不保存

按:w 是保存不退出


#撤销修改

git checkout -- file可以丢弃工作区的修改，让文件回到最近一次git commit或git add的状态。




#删除文件

从版本库中删除该文件，那就用命令git rm删掉，并且git commit： $ git rm test.txt
rm 'test.txt'
$ git commit -m "remove test.txt"

工作区删file.txt,再用rm会删掉stage里的file，但是不会删掉master里的内容，master里的各节点永远都在



#远程仓库

GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，，，

最后友情提示，在GitHub上免费托管的Git仓库，任何人都可以看到喔（但只有你自己才能改）。所以，不要把敏感信息放进去。





#添加远程库

远程库的名字就是origin，这是Git默认的叫法

要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；

关联后，使用命令git push -u origin master第一次推送master分支的所有内容；

此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！
